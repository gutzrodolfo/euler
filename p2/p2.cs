/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 

By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

// NOTE: Still need to add check to verify sum of values is less than 4M.

using System;
using System.Collections.Generic; //Include this namespace to use the List<T> type.

public class fibonacci
{
	public static void Main(String[] args)
	{
		//Initialize new list of integers named "mylist".
		List<int> mylist = new List<int>();

		//Store "seed" values for F0=0 and F1=1 in container. 
		mylist.Add(0);
		mylist.Add(1);

		//Intialize variable "sum" to store the even-valued terms of Fibonacci sequence.
		double sum=0;

		//Intialize for loop at the 3rd term (F2) of the container.
		for (int i=2; i < 34; i++)
		{
			//Add ith term of Fibonacci sequence to container by following Fn=F(n-1)+F(n-2)
			mylist.Add(mylist[i-1] + mylist[i-2]);

			//Print ith term of Fibonacci sequence at this iteration.
			Console.WriteLine("fibonacci term: {0}", mylist[i]);

			//Print current term number of Fibonacci sequence.
			Console.WriteLine("term number {0}", i);
			
			/*
			If iteration of list has a value of 0 for modulous of 2 (indicating this term of the 
			Fibonacci sequence is an even-valued term), add the term to "sum" variable. 
			*/
			if (mylist[i] % 2 == 0)
			{
				sum += mylist[i];
				Console.WriteLine("even sum value: {0}", sum);
			}
			
		}
	}
}